#
# https://raw.githubusercontent.com/bitnami/bitnami-docker-kafka/master/docker-compose.yml
#

version: 3.8'

services:

  #
  # Manages Kafka clustering
  #
  zookeeper:
    image: docker.io/bitnami/zookeeper:3.8
    ports:
      - 2181:2181
    volumes:
      - zookeeper_data:/bitnami
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  #
  # The main Kafka system
  #
  kafka:
    image: docker.io/bitnami/kafka:3.1
    ports:
      - 9092:9092
    volumes:
      - kafka_data:/bitnami
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

  #
  # The Curity Identity Server
  #
  curity-idsvr:
    image: curity.azurecr.io/curity/idsvr:7.0
    ports:
     - 6749:6749
     - 8443:8443
    volumes:
     #- ./license.json:/opt/idsvr/etc/init/license/license.json
     #- ./config-backup.xml:/opt/idsvr/etc/init/config.xml
     - ./idsvr/log4j2.xml:/opt/idsvr/etc/log4j2.xml
    environment:
      PASSWORD: 'Password1'

  #
  # The entry point API that saves to Kafka
  #
  sales-api:
    image: sales-api:1.0.0
    ports:
      - 3001:3001
    environment:
      PORT: 3001

  #
  # The orders API which both consumes and produces events
  #
  orders-api:
    image: orders-api:1.0.0
    ports:
      - 3002:3002
    environment:
      PORT: 3002

  #
  # The invoicing API which consumes events
  #
  invoicing-api:
    image: invoicing-api:1.0.0
    ports:
      - 3003:3003
    environment:
      PORT: 3003

  #
  # The shipping API which consumes events
  #
  shipping_api:
    image: shipping-api:1.0.0
    ports:
      - 3004:3004
    environment:
      PORT: 3004

#
# Kafka related storage is on the local filesystem within this project
#
volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
